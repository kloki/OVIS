#!/usr/bin/env python
#
# kloki
#
# This program is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program. If not, see <http://www.gnu.org/licenses/>.
#
# Koen Klinkers k.klinkers@gmail.com


# splits the grammar generated by pcfg extractor in two for bitPar

import random, sys
import cPickle as pickle


def main():
    old=open(sys.argv[1]).readlines()
    newgram=open(sys.argv[2],"w+" )
    lexicon=open(sys.argv[3],"w+")
    lexiconDic={}
    for line in old:
        if "\"" in line:#lexicon item
            splitted=line.split("\t")
            terminal=splitted[0].split()[1][1:-1]
            tag=splitted[0].split()[0]
            frequency=splitted[1][:-1]
            if terminal in lexiconDic:
                update=lexiconDic[terminal]
                update.append([tag,frequency])
            else:
                lexiconDic[terminal]=[[tag,frequency]]
        else:#grammar item
            splitted=line.split("\t")
            newgram.write(splitted[1][:-1]+" "+splitted[0]+"\n")


    for terminal in lexiconDic:
        tags=lexiconDic[terminal]
        stringer=terminal+"\t"
        for element in tags:
            stringer=stringer+" "+element[0]+" "+element[1]

        lexicon.write(stringer+"\n")
    newgram.close
    lexicon.close


#-------------------------------
if __name__ == "__main__":
    main()
